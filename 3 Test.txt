--1. Test record insertion using overloaded Ins procedure with one rowtype parameter -- Insertion successfully done -- Test Passed
DECLARE
  v_row wid_emp%ROWTYPE;
BEGIN
  v_row.emp_id     := 123        ;
  v_row.emp_name   := 'Cristian1';
  v_row.job_title  := 'Engineer' ;
  v_row.mgr_id     := 90006      ;
  v_row.date_hired := SYSDATE - 1;
  v_row.salary     := 100        ;
  v_row.dept_id    := 2          ;
  --
  create_row.Ins (v_row);
END;
/

--2. Test record insertion using overloaded Ins procedure with multiple parameters -- Insertion successfully done -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 124
                 ,p_emp_name   => 'Cristian2'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

-3. Test record insertion with an existing emp_id (PK) -- Insertion failed -- ORA-20008: Record cannot be inserted. Employee with ID 124 already exists! -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 124
                 ,p_emp_name   => 'Cristian2'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

--4. Test record insertion with an long name (over 50 characters) -- Insertion failed -- ORA-06502: PL/SQL: numeric or value error: character string buffer too small -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 125
                 ,p_emp_name   => 'Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

--5. Test record insertion with an NULL field on each record -- Insertion failed but for the manager = NULL -- Test Passed
DECLARE
  CURSOR c_emp IS
    SELECT NULL AS emp_id, 'Cristian3' AS emp_name, 'Engineer' AS job_title, 90006 AS mgr_id, SYSDATE - 1 AS date_hired, 100  AS salary, 2    AS dept_id FROM DUAL UNION ALL
    SELECT 126  AS emp_id, NULL        AS emp_name, 'Engineer' AS job_title, 90006 AS mgr_id, SYSDATE - 1 AS date_hired, 100  AS salary, 2    AS dept_id FROM DUAL UNION ALL
    SELECT 127  AS emp_id, 'Cristian5' AS emp_name, NULL       AS job_title, 90006 AS mgr_id, SYSDATE - 1 AS date_hired, 100  AS salary, 2    AS dept_id FROM DUAL UNION ALL
    SELECT 128  AS emp_id, 'Cristian6' AS emp_name, 'Engineer' AS job_title, NULL  AS mgr_id, SYSDATE - 1 AS date_hired, 100  AS salary, 2    AS dept_id FROM DUAL UNION ALL -- ok
    SELECT 129  AS emp_id, 'Cristian7' AS emp_name, 'Engineer' AS job_title, 90006 AS mgr_id, NULL        AS date_hired, 100  AS salary, 2    AS dept_id FROM DUAL UNION ALL
    SELECT 130  AS emp_id, 'Cristian8' AS emp_name, 'Engineer' AS job_title, 90006 AS mgr_id, SYSDATE - 1 AS date_hired, NULL AS salary, 2    AS dept_id FROM DUAL UNION ALL
    SELECT 131  AS emp_id, 'Cristian9' AS emp_name, 'Engineer' AS job_title, 90006 AS mgr_id, SYSDATE - 1 AS date_hired, 100  AS salary, NULL AS dept_id FROM DUAL;
BEGIN
  FOR c IN c_emp LOOP
    BEGIN
      INSERT INTO wid_emp VALUES c;
    EXCEPTION
      WHEN OTHERS THEN NULL;
    END;
  END LOOP;
END;
/

--6. Test record insertion with NULL job_title -- Insertion failed -- ORA-01400: cannot insert NULL into ("SQL_XYTNFOJMRBTRPFQOXBMJZIFNN"."WID_EMP"."JOB_TITLE") -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 132
                 ,p_emp_name   => 'Cristian10'
                 ,p_job_title  => NULL
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

--7. Test record insertion with NULL job_title (same as above) but with global parameter g_check_nulls ON -- Insertion failed with personalized error message -- ORA-20003: Record cannot be inserted. Job title does not exist! -- Test Passed
BEGIN
  create_row.g_check_nulls := TRUE;
  create_row.Ins (p_emp_id     => 132
                 ,p_emp_name   => 'Cristian10'
                 ,p_job_title  => NULL
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;

--8. Test record insertion with NULL manager -- Insertion successfully done -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 133
                 ,p_emp_name   => 'Cristian11'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => NULL
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

--9. Test record insertion with NULL manager (same as above) but with global parameter g_check_mgr ON -- Insertion failed with personalized error message -- ORA-20007: Record cannot be inserted. Manager with ID  does not exist! -- Test Passed
BEGIN
  create_row.g_check_mgr := TRUE;
  create_row.Ins (p_emp_id     => 133
                 ,p_emp_name   => 'Cristian11'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => NULL
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 2
                 );
END;
/

--10. Test record insertion with non-existent department -- Insertion failed -- ORA-02291: integrity constraint (SQL_XYTNFOJMRBTRPFQOXBMJZIFNN.DEPT_FK) violated - parent key not found -- Test Passed
BEGIN
  create_row.Ins (p_emp_id     => 134
                 ,p_emp_name   => 'Cristian12'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 66
                 );
END;

--11. Test record insertion with non-existent department (same as above) but with global parameter g_check_dept ON -- Insertion failed with personalized error message -- ORA-20006: Record cannot be inserted. Department with ID 66 does not exist! -- Test Passed
BEGIN
  create_row.g_check_dept := TRUE;
  create_row.Ins (p_emp_id     => 134
                 ,p_emp_name   => 'Cristian13'
                 ,p_job_title  => 'Engineer'
                 ,p_mgr_id     => 90006
                 ,p_date_hired => SYSDATE - 1
                 ,p_salary     => 100
                 ,p_dept_id    => 66
                 );
END;
/

--12. Test record insertion with nested table based insert procedure -- Insertion successfully done -- Test Passed
DECLARE
  v_nt create_row.tTabNT := create_row.tTabNT ();
BEGIN
  v_nt.EXTEND (2);
  --
  v_nt (1).emp_id     := 135;
  v_nt (1).emp_name   := 'Cristian14';
  v_nt (1).job_title  := 'Engineer';
  v_nt (1).mgr_id     := 90006;
  v_nt (1).date_hired := SYSDATE - 1;
  v_nt (1).salary     := 100;
  v_nt (1).dept_id    := 2;
  --
  v_nt (2)            := v_nt (1);
  --
  v_nt (2).emp_id     := 136;
  v_nt (2).emp_name   := 'Cristian15';
  --
  create_row.Ins (v_nt);
END;
/

--13. Test record insertion with nested table based insert procedure (similar as above) but with same PK -- Script run successfully; Insertion failed for second record -- Test Passed
DECLARE
  v_nt create_row.tTabNT := create_row.tTabNT ();
BEGIN
  v_nt.EXTEND (2);
  --
  v_nt (1).emp_id     := 139;
  v_nt (1).emp_name   := 'Cristian18';
  v_nt (1).job_title  := 'Engineer';
  v_nt (1).mgr_id     := 90006;
  v_nt (1).date_hired := SYSDATE - 1;
  v_nt (1).salary     := 100;
  v_nt (1).dept_id    := 2;
  --
  v_nt (2)            := v_nt (1);
  --
  v_nt (2).emp_id     := 139;
  v_nt (2).emp_name   := 'Cristian19';
  --
  create_row.Ins (v_nt);
END;
/

--14. Test record insertion with associative array based insert procedure -- Insertion successfully done -- Test Passed
DECLARE
  v_aa    create_row.tTabAA;
  v_count INTEGER;
BEGIN
  v_count := v_aa.COUNT + 1;
  --
  v_aa (v_count).emp_id     := 137;
  v_aa (v_count).emp_name   := 'Cristian16';
  v_aa (v_count).job_title  := 'Engineer';
  v_aa (v_count).mgr_id     := 90006;
  v_aa (v_count).date_hired := SYSDATE - 1;
  v_aa (v_count).salary     := 100;
  v_aa (v_count).dept_id    := 2;
  --
  v_count                   := v_aa.COUNT + 1;
  --
  v_aa (v_count)            := v_aa (v_count - 1);
  --
  v_aa (v_count).emp_id     := 138;
  v_aa (v_count).emp_name   := 'Cristian17';
  --
  create_row.Ins (v_aa);
END;
/

--15. Test record insertion with associative array based insert procedure (same as above) but with same PK -- Script run successfully; Insertion failed for second record -- Test Passed
DECLARE
  v_aa    create_row.tTabAA;
  v_count INTEGER;
BEGIN
  v_count := v_aa.COUNT + 1;
  --
  v_aa (v_count).emp_id     := 140;
  v_aa (v_count).emp_name   := 'Cristian20';
  v_aa (v_count).job_title  := 'Engineer';
  v_aa (v_count).mgr_id     := 90006;
  v_aa (v_count).date_hired := SYSDATE - 1;
  v_aa (v_count).salary     := 100;
  v_aa (v_count).dept_id    := 2;
  --
  v_count                   := v_aa.COUNT + 1;
  --
  v_aa (v_count)            := v_aa (v_count - 1);
  --
  v_aa (v_count).emp_id     := 140;
  v_aa (v_count).emp_name   := 'Cristian21';
  --
  create_row.Ins (v_aa);
END;
/

--
SELECT * FROM wid_emp;